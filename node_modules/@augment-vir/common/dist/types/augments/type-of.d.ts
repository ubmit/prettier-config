import { AnyFunction } from '@augment-vir/common';
declare function getTypeOf(x: any): "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function";
export type TypeOf = ReturnType<typeof getTypeOf>;
export type TypeOfWithArray = TypeOf | 'array';
export type TypeOfMapping = {
    array: any[];
    bigint: bigint;
    boolean: boolean;
    function: AnyFunction;
    number: number;
    object: Record<PropertyKey, unknown>;
    string: string;
    symbol: symbol;
    undefined: undefined;
};
export declare function typeOfWithArray(input: unknown): TypeOfWithArray;
export declare function isTypeOfWithArray<T extends TypeOfWithArray>(input: unknown, testType: T): input is TypeOfMapping[T];
export {};
//# sourceMappingURL=type-of.d.ts.map