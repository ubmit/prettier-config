export declare function addCommasToNumber(input: number): string;
export declare function clamp(
/**
 * This uses a destructured object so that consumers cannot get confused as to which input is
 * which (which would be easy to do since they're all of the same type).
 */
{ value, min, max, }: {
    value: number;
    min: number;
    max: number;
}): number;
/**
 * This truncates a number such that is will at a max have 6 characters including suffix, decimal
 * point, or comma.
 *
 * Default suffixes are:
 *
 *     '', // no suffix, numbers below 1000
 *     'k', // thousand
 *     'M', // million
 *     'B', // billion
 *     'T', // trillion
 *     'P', // peta-, quadrillion
 *     'E', // exa- quintillion
 *     'Z', // zetta- sextillion
 *     'Y', // yotta- septillion
 */
export declare function truncateNumber(originalValue: unknown, { customSuffixes, suppressErrorLogging, customErrorLogCallback, }?: {
    customSuffixes?: ReadonlyArray<string>;
    suppressErrorLogging?: boolean;
    customErrorLogCallback?: (...args: any) => void;
}): string;
//# sourceMappingURL=common-number.d.ts.map