import { isTruthy } from './function';
export function combineErrors(errors) {
    if (!errors || errors.length === 0) {
        return undefined;
    }
    const firstError = errors[0];
    if (errors.length === 1 && firstError) {
        return firstError;
    }
    return new Error(errors.map((error) => extractErrorMessage(error).trim()).join('\n'));
}
export function combineErrorMessages(errors) {
    if (!errors) {
        return '';
    }
    return errors.map(extractErrorMessage).filter(isTruthy).join('\n');
}
export function extractErrorMessage(error) {
    if (!error) {
        return '';
    }
    if (error instanceof Error) {
        return error.message;
    }
    else {
        return String(error);
    }
}
export function ensureError(input) {
    if (input instanceof Error) {
        return input;
    }
    else {
        return new Error(extractErrorMessage(input));
    }
}
