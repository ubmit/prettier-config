export function filterOutIndexes(array, indexes) {
    return array.filter((_, index) => !indexes.includes(index));
}
export function flatten2dArray(array2d) {
    const flattened = array2d.reduce((accum, row) => accum.concat(row), []);
    return flattened;
}
export function trimArrayStrings(input) {
    return input.map((line) => line.trim()).filter((line) => line !== '');
}
export function typedArrayIncludes(array, input) {
    return array.includes(input);
}
/** Preserves tuple types. */
export function typedMap(arrayToMap, mapCallback) {
    return arrayToMap.map(mapCallback);
}
